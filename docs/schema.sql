Coupons Table:

create table
  public.coupons (
    id integer generated by default as identity,
    name text not null,
    valid boolean null,
    constraint Coupons_pkey primary key (id)
  ) tablespace pg_default;

Friendship Table:

create table
  public.friendship (
    id integer generated by default as identity,
    friend_id integer not null,
    date_added timestamp without time zone null,
    context text null,
    constraint Friendship_pkey primary key (id),
    constraint friendship_id_fkey foreign key (id) references "user" (id)
  ) tablespace pg_default;

Review Table:

create table
  public.review (
    id integer generated by default as identity,
    author_name text not null,
    description text null,
    rating integer null,
    route_id integer null,
    constraint Review_pkey primary key (id),
    constraint review_route_id_fkey foreign key (route_id) references route (id)
  ) tablespace pg_default;


Route Table:

create table
  public.route (
    id integer generated by default as identity,
    name text not null,
    date_added timestamp with time zone null default now(),
    location text null,
    length_in_miles real null,
    difficulty integer null,
    activities text null,
    user_id integer null,
    coords real[] null,
    constraint Route_pkey primary key (id)
  ) tablespace pg_default;

User Table:

create table
  public.user (
    id integer generated by default as identity,
    username text not null,
    date_joined time without time zone null default now(),
    num_followers integer null default 0,
    banned boolean null default false,
    peep_coins integer null default 0,
    constraint User_pkey primary key (id),
    constraint User_username_key unique (username)
  ) tablespace pg_default;
  
  
Business Table:

create table
  public.business (
    id bigint generated by default as identity,
    name text not null,
    address text not null,
    commissions_rate double precision null,
    constraint business_pkey primary key (id)
  ) tablespace pg_default;

Followers Table:

create table
  public.followers (
    id integer generated by default as identity,
    follower_id integer not null,
    date_added timestamp with time zone null,
    constraint Friendship_pkey primary key (id),
    constraint followers_id_fkey foreign key (id) references user_test (id) on delete cascade
  ) tablespace pg_default;

User Coupon Ledger:

create table
  public.user_coupon_ledger (
    time timestamp with time zone not null default now(),
    user_id integer not null,
    coupon_id integer not null,
    change integer null,
    constraint user_coupon_ledger_pkey primary key (user_id, coupon_id),
    constraint user_coupon_ledger_coupon_id_fkey foreign key (coupon_id) references coupons (id),
    constraint user_coupon_ledger_user_id_fkey foreign key (user_id) references "user" (id)
  ) tablespace pg_default;

User PeepCoin Ledger:

create table
  public.user_peepcoin_ledger (
    date timestamp with time zone not null default now(),
    user_id integer not null,
    change integer null,
    constraint user_peepcoin_ledger_pkey primary key (date, user_id),
    constraint user_peepcoin_ledger_user_id_fkey foreign key (user_id) references "user" (id)
  ) tablespace pg_default;
